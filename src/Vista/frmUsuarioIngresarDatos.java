package Vista;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Victor
 */
public class frmUsuarioIngresarDatos extends javax.swing.JFrame {
    int Xmouse,Ymouse;
    
    /**
     * Creates new form frmAgendacionCita
     */
    public frmUsuarioIngresarDatos() {
        initComponents();
        this.setLocationRelativeTo(null);
        btnBorrarCampos.requestFocus();
        btnRegresarInicio.setToolTipText("Regresa a la interfaz principal");
        btnConfirmar.setToolTipText("Guarda la informacion y da paso para seleccionar la fecha");
        btnBorrarCampos.setToolTipText("Se borran todos los campos para agregar una nueva cita");
        btnRegresar.setToolTipText("Regresa a la interfaz anterior");
        btnSalir.setToolTipText("Cierra todos las interfaces y procesos existentes");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtNumeroCedula = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombrePaciente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtApellidoPaciente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbxGeneroPaciente = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtEdadPaciente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbxTipoIdentificacion = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaMolestias = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtNumeroTelefono = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();
        btnRegresarInicio = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        barrademovimiento = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnBorrarCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INGRESAR DATOS DEL PACIENTE");
        setBackground(new java.awt.Color(204, 255, 255));
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(20, 66, 114));
        jPanel4.setForeground(new java.awt.Color(204, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INGRESAR DATOS DEL PACIENTE");

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Botones/btnIngresarIcono.png"))); // NOI18N
        btnConfirmar.setText("  CONFIRMAR");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(20, 66, 114));

        txtNumeroCedula.setForeground(java.awt.Color.gray);
        txtNumeroCedula.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroCedula.setText("Ingreso solo numeros");
        txtNumeroCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroCedulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroCedulaFocusLost(evt);
            }
        });
        txtNumeroCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroCedulaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroCedulaKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Apellidos");

        txtNombrePaciente.setForeground(java.awt.Color.gray);
        txtNombrePaciente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombrePaciente.setText("Ingresar solo letras");
        txtNombrePaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombrePacienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombrePacienteFocusLost(evt);
            }
        });
        txtNombrePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombrePacienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombrePacienteKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombres");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Identificacion");

        txtApellidoPaciente.setForeground(java.awt.Color.gray);
        txtApellidoPaciente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtApellidoPaciente.setText("Ingresar solo letras");
        txtApellidoPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidoPacienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoPacienteFocusLost(evt);
            }
        });
        txtApellidoPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoPacienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoPacienteKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Genero");

        cbxGeneroPaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maculino", "Femenino" }));
        cbxGeneroPaciente.setSelectedItem(null);
        cbxGeneroPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbxGeneroPacienteKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Edad");

        txtEdadPaciente.setForeground(java.awt.Color.gray);
        txtEdadPaciente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEdadPaciente.setText("Ingreso solo numeros, maximo hasta 140 a√±os");
        txtEdadPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEdadPacienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEdadPacienteFocusLost(evt);
            }
        });
        txtEdadPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEdadPacienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadPacienteKeyTyped(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tipo identificacion");

        cbxTipoIdentificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cedula", "Pasaporte" }));
        cbxTipoIdentificacion.setSelectedItem(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNumeroCedula)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombrePaciente)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtApellidoPaciente)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEdadPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxTipoIdentificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxGeneroPaciente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumeroCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellidoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEdadPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxGeneroPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(20, 66, 114));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Molestias");

        txaMolestias.setColumns(20);
        txaMolestias.setForeground(java.awt.Color.gray);
        txaMolestias.setRows(5);
        txaMolestias.setText("Ingreso de molestias detalladas");
        txaMolestias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txaMolestiasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txaMolestiasFocusLost(evt);
            }
        });
        txaMolestias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaMolestiasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txaMolestias);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Numero celular");

        txtNumeroTelefono.setForeground(java.awt.Color.gray);
        txtNumeroTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroTelefono.setText("Ingreso solo numeros");
        txtNumeroTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroTelefonoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroTelefonoFocusLost(evt);
            }
        });
        txtNumeroTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroTelefonoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroTelefonoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNumeroTelefono)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Botones/btnRegresarIcono.png"))); // NOI18N
        btnRegresar.setText("  REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnRegresarInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Botones/btnInicioIcono.png"))); // NOI18N
        btnRegresarInicio.setText("REGRESAR A INICIO");
        btnRegresarInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarInicioActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Botones/btnSalirIcono.png"))); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        barrademovimiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        barrademovimiento.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barrademovimientoMouseDragged(evt);
            }
        });
        barrademovimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barrademovimientoMousePressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Fondos/IconoIngresarDatos.png"))); // NOI18N

        btnBorrarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RecursosGraficos/Botones/btnLimpiarIcono.png"))); // NOI18N
        btnBorrarCampos.setText("Limpiar");
        btnBorrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnSalir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRegresarInicio))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegresar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnBorrarCampos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConfirmar))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(barrademovimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(barrademovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresarInicio)
                    .addComponent(btnRegresar)
                    .addComponent(btnSalir)
                    .addComponent(btnConfirmar)
                    .addComponent(btnBorrarCampos))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
       
        ImageIcon CedulaVaciaIcono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneCedulaVacioIcono.png");
        ImageIcon NombresIcono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneNombresIcono.png");
        ImageIcon GeneroIcono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneGeneroIcono.png");
        ImageIcon TelefonoIcono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneTelefonoIcono.png");
        ImageIcon MolestiaIcono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneMolestiaIcono.png");
        ImageIcon Edad = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneEdadMinimaMaximaIcono.png");
        ImageIcon CampoVacio = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneCampoVacioIcono.png");
        ImageIcon TipoId = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneIdentidicacionIcono.png");
        ImageIcon ErrorTelefono = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneErrorTelefonoIcono.png");
        ImageIcon NumeroMenor = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneNumeroIgualIcono.png");
        ImageIcon EdadMaxima = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneEdadMaximaIcono.png");
        String cedula = txtNumeroCedula.getText();
        String telefono = txtNumeroTelefono.getText();
        if(cbxTipoIdentificacion.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null,"No se ha seleccionado el tipo de identificacion","TIPO IDENTIFICACION VACIO",JOptionPane.INFORMATION_MESSAGE,TipoId);
        }
        else if(txtNumeroCedula.getText().isEmpty() || txtNumeroCedula.getText().equalsIgnoreCase("Ingreso solo numeros")){
            JOptionPane.showMessageDialog(null, "Por favor llene el campo de la cedula","INGRESE TODOS LOS DATOS",JOptionPane.ERROR_MESSAGE,CedulaVaciaIcono);
        }
        else if(cedula.length()<10){
            JOptionPane.showMessageDialog(null, "La cedula tiene menos de 10 digitos","CEDULA MAL ESTABLECIDA",JOptionPane.ERROR_MESSAGE,NumeroMenor);
        }
        else if(txtNombrePaciente.getText().isEmpty() || txtNombrePaciente.getText().equalsIgnoreCase("Ingresar solo letras")){
            JOptionPane.showMessageDialog(null, "Por favor llene el campo del nombre","INGRESE TODOS LOS DATOS",JOptionPane.WARNING_MESSAGE,NombresIcono);
        }
        else if(txtApellidoPaciente.getText().isEmpty() || txtApellidoPaciente.getText().equalsIgnoreCase("Ingresar solo letras")){
            JOptionPane.showMessageDialog(null, "Por favor llene el campo de apellido ","INGRESE TODOS LOS DATOS",JOptionPane.WARNING_MESSAGE,CampoVacio);
        }
        else if(txtEdadPaciente.getText().isEmpty() || txtEdadPaciente.getText().equalsIgnoreCase("Ingreso solo numeros, maximo hasta 140 a√±os")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese la edad","INGRESE TODOS LOS DATOS",JOptionPane.WARNING_MESSAGE,Edad);
        }
        else if(Integer.parseInt(txtEdadPaciente.getText()) > 140){
            JOptionPane.showMessageDialog(null, "La edad maxima es de 140 a√±os", "EDAD INVALIDA", JOptionPane.INFORMATION_MESSAGE, EdadMaxima);
        }
        else if(cbxGeneroPaciente.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "Por favor seleccione el genero","INGRESE TODOS LOS DATOS",JOptionPane.WARNING_MESSAGE,GeneroIcono);
        }
        else if(txtNumeroTelefono.getText().isEmpty() || txtNumeroTelefono.getText().equalsIgnoreCase("Ingreso solo numeros")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese el numero telefonico","INGRESE TODOS LOS DATOS",JOptionPane.ERROR_MESSAGE,TelefonoIcono);
        }
        else if(telefono.length()<10){
            JOptionPane.showMessageDialog(null, "La cedula tiene menos de 10 digitos","TELEFONO MAL ESTABLECIDO",JOptionPane.ERROR_MESSAGE,NumeroMenor);
        }
        else if(!txtNumeroTelefono.getText().matches("09\\d{8}")){
            JOptionPane.showMessageDialog(null, "El numero de telefono tiene que tener este formato 09********","TELEFONO NO VALIDO",JOptionPane.ERROR_MESSAGE,ErrorTelefono);
        }
        else if(txaMolestias.getText().isEmpty() || txaMolestias.getText().equalsIgnoreCase("Ingreso de molestias detalladas")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese las molestias que presenta","INGRESE TODOS LOS DATOS",JOptionPane.WARNING_MESSAGE,MolestiaIcono);
        }
        else{
            frmUsuarioSeleccionarFecha abrir = new frmUsuarioSeleccionarFecha();
            abrir.setVisible(true);
        }
        
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void txtNumeroCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroCedulaKeyTyped
        
        int key = evt.getKeyChar();
        boolean delete = key == 8;
        Character c = evt.getKeyChar();
        if(!(Character.isDigit(c) || delete)){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingreso de numeros", "TEXTO NO VALIDO", JOptionPane.WARNING_MESSAGE);
        }
        if(txtNumeroCedula.getText().length()>=10){
            evt.consume();
        }

    }//GEN-LAST:event_txtNumeroCedulaKeyTyped

    private void txtEdadPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadPacienteKeyTyped
        
        int key = evt.getKeyChar();
        boolean delete = key == 8;
        Character c = evt.getKeyChar();
        if(!(Character.isDigit(c) || delete)){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingreso de numeros", "TEXTO NO VALIDO", JOptionPane.WARNING_MESSAGE);
        }
        if(txtEdadPaciente.getText().length()>=3){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtEdadPacienteKeyTyped

    private void txtNumeroTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoKeyTyped
        
        int key = evt.getKeyChar();
        boolean delete = key == 8;
        Character c = evt.getKeyChar();
        if(!(Character.isDigit(c) || delete)){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingreso de numeros", "TEXTO NO VALIDO", JOptionPane.WARNING_MESSAGE);
        }
        if(txtNumeroTelefono.getText().length()>=10){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtNumeroTelefonoKeyTyped

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        
        ImageIcon Seguro = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneConfirmarSeguroIcono.png");
        if (!txtNumeroCedula.getText().isEmpty() & !txtNumeroCedula.getText().equalsIgnoreCase("Ingreso solo numeros")
                || !txtNombrePaciente.getText().isEmpty() & !txtNombrePaciente.getText().equalsIgnoreCase("Ingresar solo letras")
                || !txtApellidoPaciente.getText().isEmpty() & !txtApellidoPaciente.getText().equalsIgnoreCase("Ingresar solo letras")
                || !txtEdadPaciente.getText().isEmpty() & !txtEdadPaciente.getText().equalsIgnoreCase("Ingreso solo numeros, maximo hasta 140 a√±os")
                || cbxGeneroPaciente.getSelectedItem() != null 
                || !txtNumeroTelefono.getText().isEmpty() & !txtNumeroTelefono.getText().equalsIgnoreCase("Ingreso solo numeros")
                || !txaMolestias.getText().isEmpty() & !txaMolestias.getText().equalsIgnoreCase("Ingreso de molestias detalladas")){
            int result = JOptionPane.showConfirmDialog(null, "Estas seguro de regresar? \nSe perderan todos los avances no guardados", "CONFIRMAR SALIDA", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,Seguro);
            if (result == JOptionPane.YES_OPTION) {
                FrmMenuPaciente abrir = new FrmMenuPaciente();
                abrir.setVisible(true);
                this.setVisible(false);
            }
        } 
        else {
            FrmMenuPaciente abrir = new FrmMenuPaciente();
            abrir.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtNumeroCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroCedulaKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            txtNombrePaciente.requestFocus();
        }
        
    }//GEN-LAST:event_txtNumeroCedulaKeyPressed

    private void txtNombrePacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombrePacienteKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            txtApellidoPaciente.requestFocus();
        }
        
    }//GEN-LAST:event_txtNombrePacienteKeyPressed

    private void txtApellidoPacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPacienteKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            txtEdadPaciente.requestFocus();
        }
        
    }//GEN-LAST:event_txtApellidoPacienteKeyPressed

    private void txtEdadPacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadPacienteKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            cbxGeneroPaciente.requestFocus();
        }
        
    }//GEN-LAST:event_txtEdadPacienteKeyPressed

    private void txtNumeroTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            txaMolestias.requestFocus();
        }
        
    }//GEN-LAST:event_txtNumeroTelefonoKeyPressed

    private void btnRegresarInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarInicioActionPerformed
                
        ImageIcon Seguro = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneConfirmarSeguroIcono.png");
        if (!txtNumeroCedula.getText().isEmpty() & !txtNumeroCedula.getText().equalsIgnoreCase("Ingreso solo numeros")
                || !txtNombrePaciente.getText().isEmpty() & !txtNombrePaciente.getText().equalsIgnoreCase("Ingresar solo letras")
                || !txtApellidoPaciente.getText().isEmpty() & !txtApellidoPaciente.getText().equalsIgnoreCase("Ingresar solo letras")
                || !txtEdadPaciente.getText().isEmpty() & !txtEdadPaciente.getText().equalsIgnoreCase("Ingreso solo numeros, maximo hasta 140 a√±os")
                || cbxGeneroPaciente.getSelectedItem() != null 
                || !txtNumeroTelefono.getText().isEmpty() & !txtNumeroTelefono.getText().equalsIgnoreCase("Ingreso solo numeros")
                || !txaMolestias.getText().isEmpty() & !txaMolestias.getText().equalsIgnoreCase("Ingreso de molestias detalladas")){
            int result = JOptionPane.showConfirmDialog(null, "Estas seguro de salir? \nSe perderan todos los avances no guardados", "CONFIRMAR SALIDA", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,Seguro);
            if (result == JOptionPane.YES_OPTION) {
                frmPrincipal abrir = new frmPrincipal();
                abrir.setVisible(true);
                this.setVisible(false);
            }
        } 
        else {
            frmPrincipal abrir = new frmPrincipal();
            abrir.setVisible(true);
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_btnRegresarInicioActionPerformed

    private void txtNombrePacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombrePacienteKeyTyped
        
        int key = evt.getKeyChar();
        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean delete = key == 8;
        if (!(minusculas || mayusculas || espacio ||delete)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingreso de letras", "TEXTO NO VALIDO", JOptionPane.WARNING_MESSAGE);
        }
        if(txtNombrePaciente.getText().length()>=30){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtNombrePacienteKeyTyped

    private void txtApellidoPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPacienteKeyTyped
        
        int key = evt.getKeyChar();
        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean delete = key == 8;
        if (!(minusculas || mayusculas || espacio || delete)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingreso de letras", "TEXTO NO VALIDO", JOptionPane.WARNING_MESSAGE);
        }
        if(txtApellidoPaciente.getText().length()>=30){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtApellidoPacienteKeyTyped

    private void cbxGeneroPacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxGeneroPacienteKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            txtNumeroTelefono.requestFocus();
        }
        
    }//GEN-LAST:event_cbxGeneroPacienteKeyPressed

    private void txaMolestiasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaMolestiasKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER){
            btnConfirmar.requestFocus();
        }
        
    }//GEN-LAST:event_txaMolestiasKeyPressed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        
        ImageIcon SalirConfirmar = new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneSalirIcono.png");
        int valor = JOptionPane.showConfirmDialog(null, "¬øEsta seguro que quiere salir del sistema?\n Se perderan todos los avances", "CONFIRMACION DE SALIDA", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, SalirConfirmar);
        if(valor == JOptionPane.YES_OPTION){
            System.exit(0);
        }
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void barrademovimientoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barrademovimientoMousePressed
        
        Xmouse = evt.getX();
        Ymouse = evt.getY();
        
    }//GEN-LAST:event_barrademovimientoMousePressed

    private void barrademovimientoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barrademovimientoMouseDragged
        
        int x =evt.getXOnScreen();
        int y =evt.getYOnScreen();
        this.setLocation(x-Xmouse,y- Ymouse);
        
    }//GEN-LAST:event_barrademovimientoMouseDragged

    private void txtNumeroCedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroCedulaFocusGained
        
        if (txtNumeroCedula.getText().equals("Ingreso solo numeros")) {
            txtNumeroCedula.setText("");
            txtNumeroCedula.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txtNumeroCedulaFocusGained

    private void txtNumeroCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroCedulaFocusLost
       
        if (txtNumeroCedula.getText().isEmpty()) {
            txtNumeroCedula.setText("Ingreso solo numeros");
            txtNumeroCedula.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txtNumeroCedulaFocusLost

    private void txtNombrePacienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombrePacienteFocusGained
        
        if (txtNombrePaciente.getText().equals("Ingresar solo letras")) {
            txtNombrePaciente.setText("");
            txtNombrePaciente.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txtNombrePacienteFocusGained

    private void txtNombrePacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombrePacienteFocusLost
        
        if (txtNombrePaciente.getText().isEmpty()) {
            txtNombrePaciente.setText("Ingresar solo letras");
            txtNombrePaciente.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txtNombrePacienteFocusLost

    private void txtApellidoPacienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoPacienteFocusGained
        
        if (txtApellidoPaciente.getText().equals("Ingresar solo letras")) {
            txtApellidoPaciente.setText("");
            txtApellidoPaciente.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txtApellidoPacienteFocusGained

    private void txtApellidoPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoPacienteFocusLost
        
        if (txtApellidoPaciente.getText().isEmpty()) {
            txtApellidoPaciente.setText("Ingresar solo letras");
            txtApellidoPaciente.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txtApellidoPacienteFocusLost

    private void txtEdadPacienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadPacienteFocusGained
        
        if (txtEdadPaciente.getText().equals("Ingreso solo numeros, maximo hasta 140 a√±os")) {
            txtEdadPaciente.setText("");
            txtEdadPaciente.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txtEdadPacienteFocusGained

    private void txtEdadPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadPacienteFocusLost
        
        if (txtEdadPaciente.getText().isEmpty()) {
            txtEdadPaciente.setText("Ingreso solo numeros, maximo hasta 140 a√±os");
            txtEdadPaciente.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txtEdadPacienteFocusLost

    private void txtNumeroTelefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoFocusGained
        
        if (txtNumeroTelefono.getText().equals("Ingreso solo numeros")) {
            txtNumeroTelefono.setText("");
            txtNumeroTelefono.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txtNumeroTelefonoFocusGained

    private void txtNumeroTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoFocusLost
        
        if (txtNumeroTelefono.getText().isEmpty()) {
            txtNumeroTelefono.setText("Ingreso solo numeros");
            txtNumeroTelefono.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txtNumeroTelefonoFocusLost

    private void txaMolestiasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txaMolestiasFocusGained
        
        if (txaMolestias.getText().equals("Ingreso de molestias detalladas")) {
            txaMolestias.setText("");
            txaMolestias.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_txaMolestiasFocusGained

    private void txaMolestiasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txaMolestiasFocusLost
        
        if (txaMolestias.getText().isEmpty()) {
            txaMolestias.setText("Ingreso de molestias detalladas");
            txaMolestias.setForeground(Color.GRAY);
        }
        
    }//GEN-LAST:event_txaMolestiasFocusLost

    private void btnBorrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCamposActionPerformed
        
        ImageIcon LimpiarDatos= new ImageIcon("src/RecursosGraficos/JoptionPane/JoptionPaneLimpiarDatosIcono.png");
        int result = JOptionPane.showConfirmDialog(null, "Quiere limpiar todos los campos, \npara crear una nueva cita", "CONFIRMAR LIMPIEZA", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, LimpiarDatos);
        if (result == JOptionPane.YES_OPTION) {
            Vista.frmUsuarioIngresarDatos.txtNumeroCedula.setText("");
            Vista.frmUsuarioIngresarDatos.txtNombrePaciente.setText("");
            Vista.frmUsuarioIngresarDatos.txtApellidoPaciente.setText("");
            Vista.frmUsuarioIngresarDatos.txtEdadPaciente.setText("");
            Vista.frmUsuarioIngresarDatos.cbxGeneroPaciente.setSelectedItem(null);
            Vista.frmUsuarioIngresarDatos.txtNumeroTelefono.setText("");
            Vista.frmUsuarioIngresarDatos.txaMolestias.setText("");
        } 
        else {

        }
        
    }//GEN-LAST:event_btnBorrarCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUsuarioIngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUsuarioIngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUsuarioIngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUsuarioIngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUsuarioIngresarDatos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barrademovimiento;
    private javax.swing.JButton btnBorrarCampos;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresarInicio;
    private javax.swing.JButton btnSalir;
    public static javax.swing.JComboBox<String> cbxGeneroPaciente;
    public static javax.swing.JComboBox<String> cbxTipoIdentificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea txaMolestias;
    public static javax.swing.JTextField txtApellidoPaciente;
    public static javax.swing.JTextField txtEdadPaciente;
    public static javax.swing.JTextField txtNombrePaciente;
    public static javax.swing.JTextField txtNumeroCedula;
    public static javax.swing.JTextField txtNumeroTelefono;
    // End of variables declaration//GEN-END:variables
}
